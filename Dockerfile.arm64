FROM arm64v8/ubuntu:24.04 AS builder

ENV DEBIAN_FRONTEND=noninteractive

RUN apt-get update && apt-get install -y \
    build-essential \
    cmake \
    ninja-build \
    pkg-config \
    git \
    ca-certificates \
    libssl-dev \
    zlib1g-dev \
    libgrpc++-dev \
    libprotobuf-dev \
    protobuf-compiler-grpc \
    protobuf-compiler \
    libboost-system-dev \
    libboost-thread-dev \
    libpaho-mqtt-dev \
    libpaho-mqttpp-dev \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app
COPY . .

# Build the application
RUN cmake -B build \
    -DCMAKE_BUILD_TYPE=Release \
    -DBUILD_TESTS=OFF \
    -DCMAKE_INSTALL_PREFIX=/usr/local \
    -GNinja && \
    cmake --build build --parallel $(nproc)

FROM arm64v8/ubuntu:24.04

RUN apt-get update && apt-get install -y \
    libssl3 \
    zlib1g \
    libgrpc++1.51 \
    libprotobuf32t64 \
    libboost-system1.83.0 \
    libboost-thread1.83.0 \
    libpaho-mqtt1.3 \
    libpaho-mqttpp3-1 \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/*

COPY --from=builder /app/build/vehicle_gateway /usr/local/bin/vehicle_gateway

RUN useradd -r -s /bin/false gateway && \
    mkdir -p /app/config /app/logs && \
    chown -R gateway:gateway /app

WORKDIR /app

USER gateway

EXPOSE 8080 1883 8883

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD ["/usr/local/bin/vehicle_gateway", "--health-check"] || exit 1

ENTRYPOINT ["/usr/local/bin/vehicle_gateway"]
CMD ["--help"]